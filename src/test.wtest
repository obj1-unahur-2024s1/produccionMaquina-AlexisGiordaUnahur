import registroProduccion.*

test "probando algunDiaSeProdujo" {
	registroProduccion.piezasProducidas([43,18,49,62,33,39])
	
	assert.that(registroProduccion.algunDiaSeProdujo(49))
	assert.notThat(registroProduccion.algunDiaSeProdujo(52))

}

test "probando maximoValorDeProduccion" {
	registroProduccion.piezasProducidas([43,18,49,62,33,39])
	
	assert.equals(62,registroProduccion.maximoValorDeProduccion())
}

test "probando valoresDeProduccionPares" {
	registroProduccion.piezasProducidas([43,18,49,62,33,39])
	
	assert.equals([18,62],registroProduccion.valoresDeProduccionPares())
}

test "probando produccionEsAcotada" {
	registroProduccion.piezasProducidas([43,18,49,62,33,39])
	
	assert.that(registroProduccion.produccionEsAcotada(10,100))
	assert.notThat(registroProduccion.produccionEsAcotada(20,100))
}

test "probando produccionesSuperioresA" {
	registroProduccion.piezasProducidas([43,18,49,62,33,39])
	
	assert.equals([43, 49, 62, 39],registroProduccion.produccionesSuperioresA(35))
}

test "probando produccionesSumando" {
	registroProduccion.piezasProducidas([43,18,49,62,33,39])
	
	assert.equals([48, 23, 54, 67, 38, 44],registroProduccion.produccionesSumando(5))
}

test "probando ultimoValorDeProduccion" {
	registroProduccion.piezasProducidas([43,18,49,62,33,39])
	
	assert.equals(39,registroProduccion.ultimoValorDeProduccion())
}

test "probando cantidadProduccionesMayorALaPrimera" {
	registroProduccion.piezasProducidas([43,18,49,62,33,39])
	
	assert.equals(2,registroProduccion.cantidadProduccionesMayorALaPrimera())
}









